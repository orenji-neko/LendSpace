@page "/Login"
@inject ILogger<Login> Logger
@inject SignInManager<UserModel> SignInManager
@inject NavigationManager Navigation

<PageTitle>Sign-In</PageTitle>

<div class="h-screen flex items-center justify-center p-4 bg-gray-100">
    <div class="bg-white/95 w-full max-w-[420px] sm:max-w-md md:max-w-lg shadow-lg rounded-md h-full" 
        >
        
        <!-- Header Section -->
        <div class="pt-6 sm:pt-8 px-4 sm:px-6 md:px-8">
            <!-- Logo -->
            <div class="flex justify-center">
                <div class="w-9 h-9 sm:w-10 sm:h-10 md:w-12 md:h-12 overflow-hidden">
                    <img class="w-full h-full" src="/image/login(1).png" alt="Logo" />
                </div>
            </div>
            <!-- Welcome Text -->
            <h1 class="text-gray-800 text-center font-bold font-poppins text-xl sm:text-2xl md:text-3xl mt-3 sm:mt-4">
                Welcome Back
            </h1>
            <!-- Subtext -->
            <p class="text-gray-600 text-center font-normal font-poppins text-sm sm:text-base mt-2">
                Please sign in to your account
            </p>
        </div>

        <EditForm FormName="Login" Model="Model" OnValidSubmit="HandleValidSubmit" 
                 class="px-4 sm:px-6 md:px-8 mt-6 sm:mt-8">
            <DataAnnotationsValidator />
            <ValidationSummary class="mb-4" />

            @if (!string.IsNullOrEmpty(loginError))
            {
                <div class="mb-4 sm:mb-6 p-3 bg-red-100 border-l-4 border-red-500 text-red-700 text-sm sm:text-base">
                    <p>@loginError</p>
                </div>
            }

            <!-- Email Input -->
            <div class="w-full mb-4 sm:mb-6">
                <label class="block text-gray-700 text-left font-medium font-poppins text-xs sm:text-sm md:text-base mb-1">
                    Email Address
                </label>
                <div class="relative">
                    <InputText type="email" @bind-Value="Model!.Email"
                               class="w-full h-10 sm:h-12 md:h-14 rounded-lg border border-gray-200 pl-10 sm:pl-12 pr-4 
                                      text-gray-400 font-normal font-poppins text-sm sm:text-base"
                               placeholder="Enter your email" />
                    <div class="absolute left-3 sm:left-4 top-1/2 transform -translate-y-1/2 w-3 h-3 sm:w-4 sm:h-4">
                        <img class="w-full h-full" src="/image/login(2).png" alt="Email icon" />
                    </div>
                </div>
                <ValidationMessage For="@(() => Model.Email)" class="text-red-500 text-xs mt-1 block" />
            </div>

            <!-- Password Input -->
            <div class="w-full mb-4 sm:mb-6">
                <label class="block text-gray-700 text-left font-medium font-poppins text-xs sm:text-sm md:text-base mb-1">
                    Password
                </label>
                <div class="relative">
                    <InputText type="password" @bind-Value="Model!.Password"
                               class="w-full h-10 sm:h-12 md:h-14 rounded-lg border border-gray-200 pl-10 sm:pl-12 pr-4 
                                      text-gray-400 font-normal font-poppins text-sm sm:text-base"
                               placeholder="Enter your password" />
                    <div class="absolute left-3 sm:left-4 top-1/2 transform -translate-y-1/2 w-3 h-3 sm:w-3.5 sm:h-4">
                        <img class="w-full h-full" src="/image/login(3).png" alt="Password icon" />
                    </div>
                </div>
                <ValidationMessage For="@(() => Model.Password)" class="text-red-500 text-xs mt-1 block" />
            </div>

            <!-- Remember Me & Forgot Password -->
            <div class="w-full mb-4 sm:mb-6 flex justify-between items-center">
                <div class="flex items-center">
                    <InputCheckbox @bind-Value="Model.RememberMe" 
                                 class="w-3 h-3 sm:w-4 sm:h-4 rounded-sm border border-black mr-2" />
                    <span class="text-gray-600 font-normal font-poppins text-xs sm:text-sm">
                        Remember me
                    </span>
                </div>
                <a href="#" class="text-emerald-600 font-normal font-poppins text-xs sm:text-sm hover:underline">
                    Forgot password?
                </a>
            </div>

            <!-- Sign In Button -->
            <button type="submit" 
                    class="w-full h-10 sm:h-12 md:h-14 bg-emerald-600 hover:bg-emerald-700 rounded-lg flex items-center justify-center 
                           transition-colors duration-200 mb-4 sm:mb-6">
                <span class="text-white font-normal font-poppins text-sm sm:text-base">
                    Sign In
                </span>
            </button>
        </EditForm>

        
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginModel? Model { get; set; }

    protected override void OnInitialized()
    {
        if (Model == null)
        {
            Model = new LoginModel();
        }
    }

    // Used to display a general login error message (e.g., authentication failure).
    private string loginError = string.Empty;

    private async Task HandleValidSubmit()
    {
        var result = await SignInManager.PasswordSignInAsync(
          Model.Email, Model.Password, Model.RememberMe, lockoutOnFailure: false
        );

        if (!result.Succeeded)
        {
            loginError = "Invalid login attempt. Please check your credentials.";
        }
        else
        {
            Navigation.NavigateTo("/User", true);
        }
    }

    public class LoginModel
    {
        [Required]
        [EmailAddress]
        public string? Email { get; set; }

        [Required]
        [DataType(DataType.Password)]
        public string? Password { get; set; }

        [Display(Name = "Remember Me")]
        public bool RememberMe { get; set; }
    }
}